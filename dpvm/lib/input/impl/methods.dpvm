/* input class, methods implementation, T20.193-T20.223; $DVS:time$ */
/* Generated by Class source generator, ver 0.1.2, T19.354-T20.056 */

#include "../../../tools/registry/registry.dpvmake"
#include "input.dpvmake"
#include "version.dpvmh"

int registryMask = REGISTRY_COMPILER;	/* mask of registry applications used by input class */

(volatile stateful any inputObj) -> (const char error[], int flags) getFlags = {
	inputImpl impl;
	char err[] = convertObjToImpl(impl, inputObj, "getFlags");
	if (err.csize) return (err, 0);

	return ("", impl.data.flags);
};

(volatile stateful any inputObj, int flags) -> (const char error[]) setFlags = {
	inputImpl impl;
	char err[] = convertObjToImpl(impl, inputObj, "setFlags");
	if (err.csize) return err;

	impl.data.flags = flags;
	return "";
};

(volatile stateful any inputObj, const stateful any registry) -> (const char error[]) setRegistry = {
	inputImpl impl;
	char err[] = convertObjToImpl(impl, inputObj, "setRegistry");
	if (err.csize) return err;

	registryData registryCopy = registryObj.copy(registry);
	err = registryObj.check(registryCopy, registryMask);
	if (err.csize) return err;

	impl.data.registry = registryCopy;
	impl.data.registrySet = 1;
	return "";
};

inputMethods inputMethodsImpl = {
	version,
	getFlags,
	setFlags,
	setRegistry,
	dump,
	queryHistory,
	inputExt
};
