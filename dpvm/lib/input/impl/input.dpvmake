/* input class, makefile for implementation, T20.193-T20.223; $DVS:time$ */
/* Generated by Class source generator, ver 0.1.2, T19.354-T20.056 */

#include "input.dpvmh"

/*@ "mkError.dpvm": compose error message */
(const char mess[], const char func[]) -> (const char err[])
	mkError = jneTRn6GYrV_VDRkCLwPtoo_s5ufFKsmzNN_Mb4jMgme1Nn /* indirectly_perpetrate_mellowed */;
/* @*/

/*@ "convertObjToImpl.dpvm": convert obj from type any to type dfsImpl and check correctness (func - name of function which call this) */
(volatile stateful inputImpl impl, const stateful any inputObj, const char func[]) -> (const char error[])
	convertObjToImpl = CiLidFk1bnk_i8atwYf5ATF_TkiiLMyJ5n4_hPMpGrNJkeu /* groomer_screenings_scribing */;
/* @*/

/*@ "dump.dpvm": dump internal content of inputObj object */
(volatile stateful char out[], volatile stateful any inputObj) -> (const char error[])
	dump = MMP2JeEKPNN_FHgNkWUPK6m_EJ4tVNtgLRK_bYusghVPLzG /* benefactions_kicks_blazer */;
/* @*/

/*@ "queryHistory.dpvm": runs global history server if not yet runned, send query to server and put answer tp lines[] */
(volatile stateful historyLine lines[], volatile stateful any inputObj,
		const (volatile stateful any data, const char error[]) -> () callback,
		volatile stateful any data, int query) -> ()
	queryHistory = jZa4z6B2cRL_rXZn1gy7dWN_Z71TkSFQ9wb_ZvLXYTDSViL /* steerable_traceability_intelligence */;
/* @*/

/*@ "inputExt.dpvm": input using line editor, pushed inputted text fo line[] */
(volatile stateful char line[], volatile stateful any inputObj,
		const (volatile stateful any data, const char error[]) -> () callback,
		volatile stateful any data, int maxSize, int timeout) -> ()
	inputExt = hyWjniZLBHX_UUTyZtEnQm3_sM2RgMDHEFU_E7dxNktXD8g /* punctilious_rigidify_antithesis */;
/* @*/

/*@ "methods.dpvm": public methods implementation */
inputMethods inputMethodsImpl = jbDuzHm6qfa_fUZHkprG8Ff_MuFqvSBPmEJ_aDBA1ar6RUR /* midriff_modularity_pleasantest */;
/* @*/