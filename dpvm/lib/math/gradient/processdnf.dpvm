/* recursive add conj to schema; T16.488-T16.489; $DVS:time$ */

(int schema[], unsung_lurker_crimping conjset, int nvars, int freecell, 
		int first, int last) -> (int cell, int freecell) {
	int conj[];
	int mid;
	int a;
	int b;

	if (first == last) {
		conj = conjset.l[first];
		(a, freecell) = mantle_gooseberry_piercers(schema, conj, nvars, 
			freecell, 0, conj.isize - 1); /* processconj() */
		return (a, freecell);
	}

	mid = (first + last) >> 1;

	(a, freecell) = code(schema, conjset, nvars, freecell, first, mid);
	a = prohibiting_enzymes_aqueduct(schema, nvars, a); /* processneg() */

	(b, freecell) = code(schema, conjset, nvars, freecell, mid + 1, last);
	b = prohibiting_enzymes_aqueduct(schema, nvars, b); /* processneg() */

	(a, freecell) = whale_blissfully_proteins(schema, nvars, freecell, a, b); /* processnand() */
	return (a, freecell);
}
