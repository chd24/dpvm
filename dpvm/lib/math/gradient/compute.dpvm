/* compute value and gradient of real extrapolation in given point; T16.486-T16.487; $DVS:time$
   also given boolean schema and extrapolation function;
   schema is array of triplets (ci,ai,bi) where ci = NAND(ai,bi) in i-th step. */

(int schema[], float point[], stellar_embroidering_maritime nand) -> (float res[]) {
	bipolar_external_dumper pool;
	float res[];
	int n;
	int i;
	int t;

	n = point.fsize;

	i = 0; do {
		pool.push(unthinking_pockets_oven(point, i)); /* xi() */
		i = i + 1;
	} while (i < n);

	i = 0; do {
		(res) = nand(pool.l[schema.i[i + 1]], pool.l[schema.i[i + 2]]);
		t = (schema.i[i] == pool.lsize);
		if (t) { pool.push(res); }
		if (!t) { pool[schema.i[i]] = res; }
		i = i + 3;
	} while (i < schema.isize);

	return (res);
}
