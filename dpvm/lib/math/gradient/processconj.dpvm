/* recursive add conj to schema; T16.488-T16.489; $DVS:time$ */

(int schema[], int conj[], int nvars, int freecell, int first, int last) 
		-> (int cell, int freecell) {
	int mid;
	int a;
	int b;

	if (first == last) {
		a = conj.i[first];
		return (a, freecell);
	}

	mid = (first + last) >> 1;
	(a, freecell) = code(schema, conj, nvars, freecell, first, mid);
	(b, freecell) = code(schema, conj, nvars, freecell, mid + 1, last);
	(a, freecell) = whale_blissfully_proteins(schema, nvars, freecell, a, b); /* processnand() */
	a = prohibiting_enzymes_aqueduct(schema, nvars, a); /* processneg() */
	return (a, freecell);
}