/* form amd64 final optimization cmp rules array; T16.083-T17.663; $DVS:time$ */

#include "../../translator_utils.dpvmake"

(volatile stateful asm_instr list[], 
		const stateful char mnem[], const stateful char hex[], 
		int paramA, int paramB, int paramC, int paramD, int next) -> ()
	a = asm_add;

(volatile stateful asm_instr list[][]) -> () {
	asm_instr r[];

	r = new_rule();
	a(r, "mov rcx,d", "", 0, 0, 0, 0, 0);
	a(r, "cmp rcx,rax", "", 0, 0, 0, 0, 0);
	a(r, "setcc al", "", 0xC10094, 0, 0, 0, 0);
	a(r, "cmp rax,d", "48 3D 124", 0, 0, 0x4200, 0, 0);
	a(r, "setcc al", "0F 101 C0", 0x94, 0, 0, 0, 0);
	add_rule(list, r);

	r = new_rule();
	a(r, "mov rcx,d", "", 0, 0, 0, 0, 0);
	a(r, "cmp rcx,rax", "", 0, 0, 0, 0, 0);
	a(r, "setcc al", "", 0xC1009C, 0, 0, 0, 0);
	a(r, "cmp rax,d", "48 3D 124", 0, 0, 0x4200, 0, 0);
	a(r, "setcc al", "0F 101 C0", 0x9F, 0, 0, 0, 0);
	add_rule(list, r);

	r = new_rule();
	a(r, "mov rcx,d", "", 0, 0, 0, 0, 0);
	a(r, "cmp rcx,rax", "", 0, 0, 0, 0, 0);
	a(r, "setcc al", "", 0xC1009F, 0, 0, 0, 0);
	a(r, "cmp rax,d", "48 3D 124", 0, 0, 0x4200, 0, 0);
	a(r, "setcc al", "0F 101 C0", 0x9C, 0, 0, 0, 0);
	add_rule(list, r);

	r = new_rule();
	a(r, "mov rax,d", "", 0, 0, 0, 0, 0);
	a(r, "cmp rax,rdx", "", 0, 0, 0, 0, 0);
	a(r, "setcc al", "", 0xC10094, 0, 0, 0, 0);
	a(r, "cmp rdx,d", "48 81 FA 124", 0, 0, 0x4200, 0, 0);
	a(r, "setcc al", "0F 101 C0", 0x94, 0, 0, 0, 0);
	add_rule(list, r);

	r = new_rule();
	a(r, "mov rax,d", "", 0, 0, 0, 0, 0);
	a(r, "cmp rax,rdx", "", 0, 0, 0, 0, 0);
	a(r, "setcc al", "", 0xC1009C, 0, 0, 0, 0);
	a(r, "cmp rdx,d", "48 81 FA 124", 0, 0, 0x4200, 0, 0);
	a(r, "setcc al", "0F 101 C0", 0x9F, 0, 0, 0, 0);
	add_rule(list, r);

	r = new_rule();
	a(r, "mov rax,d", "", 0, 0, 0, 0, 0);
	a(r, "cmp rax,rdx", "", 0, 0, 0, 0, 0);
	a(r, "setcc al", "", 0xC1009F, 0, 0, 0, 0);
	a(r, "cmp rdx,d", "48 81 FA 124", 0, 0, 0x4200, 0, 0);
	a(r, "setcc al", "0F 101 C0", 0x9C, 0, 0, 0, 0);
	add_rule(list, r);

	return;
}
