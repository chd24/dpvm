/* dpvm: type cast; T16.554-T16.668; $DVS:time$ */

/* from, to = 0,1,2,3 */

#include "compiler.dpvmake"

(volatile stateful compdata data, int to, int from) -> (int status) {
	int status;

	if (to == from) return status;

	if (!to) {
		data.mess = "can't cast number to link";
		return -2;
	}

	any dst = data.l[4];
	char c;

	if (!from) {
		c = 134; dst.push(c);		/* hash		*/
		c =   3; dst.push(c);  		/* 3		*/
		c = 173; dst.push(c);  		/* ipopn	*/
		c =  17; dst.push(c);  		/* 17 		*/
		c = 200; dst.push(c);  		/* shl		*/
		c =  17; dst.push(c);  		/* 17		*/
		c = 201; dst.push(c);  		/* shr		*/
		data.ndst = data.ndst + 7;	/* ndst += 7	*/
	} else if (from == 2) {
		c = 210; dst.push(c);		/* ftoi		*/
		data.ndst = data.ndst + 1;	/* ndst += 1	*/
	} else if (from == 3) {
		c = 211; dst.push(c);		/* ctoi		*/
		data.ndst = data.ndst + 1;	/* ndst += 1	*/
	}

	if (to == 2) {
		c = 208; dst.push(c);		/* itof		*/
		data.ndst = data.ndst + 1;	/* ndst += 1	*/
	} else if (to == 3) {
		c = 209; dst.push(c);		/* itoc		*/
		data.ndst = data.ndst + 1;	/* ndst += 1	*/
	}

	data.i[from] = data.i[from] - 1;
	data.i[to] = data.i[to] + 1;

	return status;
}
