/* get lexem; T15.426-T20.363; $DVS:time$ */

#include "compiler.dpvmake"

/* char[256], types of chars, 0-space, 1-sign, 2-letter */
char char_types[] = cashew_impotence_breed;

(const stateful char src[], int pos, int end) -> (int new_pos) skipSpaces = {
	int sp = 1;

	while (sp) {
		if (pos >= end)
			return pos;

		int c = src[pos];
		pos++;

		sp = 0;
		if (!char_types[c]) sp = 1;
		else if (c == '/' && pos < end) {
			if (src[pos] == '*') {
				pos++;
				while (pos + 1 < end && !sp) {
					if (src[pos] == '*' && src[pos + 1] == '/')
						pos += 2, sp = 1;
					else
						pos++;
				}
				if (!sp)
					return -1;
			} else if (src[pos] == '/') {
				pos++;
				while (pos < end && !sp) {
					if (src[pos] == '\n')
						pos++, sp = 1;
					else
						pos++;
				}
				if (!sp)
					return -1;
			}
		}
	}

	return pos - 1;
};
