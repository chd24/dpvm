/* monitor: convert string to link; T16.464-T20.171; $DVS:time$ */

#include "../../lib/stdlib/stdlib.dpvmake"
#include "../../lib/utils/utils.dpvmake"
#include "../../lib/math/crypto/base58/base58.dpvmake"

(const char str[], const any obj, const any objs, int begin, int end) -> (const any link, int error, int nextbegin) {
	(begin, end) = strtostr(str, begin, end);

	if (begin == end)
		return (obj, -1, end);

	if (end - begin == 4 && str.c[begin] == 't' && str.c[begin + 1] == 'h' && str.c[begin + 2] == 'i' && str.c[begin + 3] == 's')
		return (obj, 0, end);

	if (end - begin == 3 && str.c[begin] == 'a' && str.c[begin + 1] == 'n' && str.c[begin + 2] == 'y')
		return ({}.type, 0, end);

	int hash = name2hash(str, begin, end), i;
	if (hash >= 0) {
		for (i = 0; i < objs.lsize; i++) {
			if (hash == objs.l[i])
				return (objs.l[i], 0, end);
		}

		return (obj, -2, end);
	}

	if (end - begin != 47)
		return (obj, -3, end);

	base58Class base58Obj = base58Create();
	int hashes[], h0, h1, h2, h3;

	if (base58Obj.methods.decodeHash(hashes, base58Obj, str, begin, end))
		return (obj, -4, end);

	for (i = 0; i < objs.lsize; i++) {
		(h0, h1, h2, h3) = getfullhash(objs.l[i]);
		if (hashes[0] == h0 && hashes[1] == h1 && hashes[2] == h2 && hashes[3] == h3)
			return (objs.l[i], 0, end);
	}

	return (obj, -5, end);
}
