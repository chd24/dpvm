/* monitor: type command processing; T16.464-T19.547; $DVS:time$ */
	
#include "../../lib/stdlib/stdlib.dpvmake"
#include "../../app/net/p2p/p2p_io.dpvmake"
#include "monitor.dpvmake"

(volatile stateful mondata data, const any objs) -> () {
	any link;
	type res;
	int begin;
	int end;
	int err;
	int n;
	int i;

	char str[] = data.text;

	do {
		n = 0;
		if (i < 8) n = res.type.i[i];
		if (i >= 8) {
			(n, err, begin) = strtoi(str, begin, str.csize, 0);
			if (err | n < 0 | (i >= 12 & n < res.i[i - 4])) {
				str = "Illegal number in 'type' command.";
				out_result(data, str);
				return;
			}
		}
		res.i[i] = n;
		i = i + 1;
	} while (i < 16);

	i = 0;
	do {
		type t;
                if (res != res.type)
                    objcopyto(t, res);
                else
                    t = res.type;

		(link, err, begin) = strtolink(str, t, objs, begin, str.csize);
		if (err < -1) {
			str = "Illegal link in 'type' command.";
			out_result(data, str);
			return;			
		}

                type tlink;
                if (link != res)
                        objcopyto(tlink, link);
                else
                        tlink = res;

                if (!err) {
			if (i < 4)
                                res.l[i] = tlink;
			else
                                res.lpush(tlink);
		}
		i = i + 1;
	} while (!err);

	any resobjs;
	resobjs.push(res);
	msave_p2p(save_object, data, resobjs);
	return;
}
