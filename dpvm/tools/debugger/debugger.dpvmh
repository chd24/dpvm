/* debugger class, public header, T19.645-T19.657; $DVS:time$ */
/* Generated by Class source generator, ver 0.1.0, T19.354-T19.358 */

/* mode parameter of 'debug' method */
int DEBUG_MODE_GENERATE	= 0; /* do not touch expression, generate bytecodes only */
int DEBUG_MODE_RUN	= 1; /* run thread without stop */
int DEBUG_MODE_STOP	= 2; /* print stack and input command */
int DEBUG_MODE_INTO	= 3; /* output stack after each step */
int DEBUG_MODE_OVER	= 4; /* run while in next function and its subfunctions */
int DEBUG_MODE_IN	= 5; /* run until goint to a next layer of functions */
int DEBUG_MODE_OUT	= 6; /* run until goint to a previous layer of functions */
int DEBUG_MODE_TO	= 7; /* run until executing given function at given position */

type debuggerMethods = {
	const char version[];
	const (volatile stateful any debuggerObj) -> (const char error[], int flags) getFlags;
	const (volatile stateful any debuggerObj, int flags) -> (const char error[]) setFlags;
	const (volatile stateful any debuggerObj, const stateful any registry) -> (const char error[]) setRegistry;
	const (volatile stateful char out[], volatile stateful any debuggerObj) -> (const char error[]) dump;
	const (volatile stateful any debuggerObj, const char expression[], const any links, int mode)
		-> (const char error[]) debug;
};

type debuggerClass = {
	volatile any data;
	const debuggerMethods methods;
};

type debuggerType = () -> (volatile debuggerClass obj);
