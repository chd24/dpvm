/* forex class, makefile for demos, T19.744-T20.067; $DVS:time$ */
/* Generated by Class source generator, ver 0.1.1, T19.354-T19.744 */

/*@ "dump.dpvm": creates forex object, sets flags to it and dumps it */
(const stateful any registry, int flags) -> (const char error[])
	dump = MFoMHL11us5_oS7DR1Q2mGr_Qs9DPWbC9Jn_pBQT6ue5zn8 /* diktat_darkening_lid */;
/* @*/

/*@ "readCryptoLog.dpvm": reads currency prices from file in crypto log format */
(const char filename[], int nCurrency, int graphX, int graphY) -> ()
	readCryptoLog = EddDgbKz5mt_hTQJ7qK6rXB_iQ9eEeoq9sJ_nzBNqiprZws /* policies_caravanning_bonding */;
/* @*/

/*@ "neuronTraining.dpvm": reads currency prices from file in crypto log format and analyse them using neuron net */
(const stateful any registry, const char filename[], const char neuronNet[], const float training_params[],
		int nCurrency, int graphX, int graphY, int testPart, int trainingCycles, int neuronFlags)
		-> (const char error[])
	neuronTraining = ot6qtkKi4yy_G3YjWdu9pXC_HVF9eqzGUpE_FAJEWsCeobZ /* cutely_motorists_panache */;
/* @*/

/*@ "logTraining.dpvm": like neurontraining. but writes logs to logfile */
(const stateful any registry, const char logname[], const char filename[], const char neuronNet[],
		const float training_params[], int nCurrency, int graphX, int graphY, int testPart, int trainingCycles,
		int neuronFlags) -> ()
	logTraining = eLrcwQVo9Fx_bHACQzKHPKt_CTBU7i9CHc9_HAeHPva3PUH /* bathed_consulted_decoupled */;
/* @*/

/*@ "infiniteTraining.dpvm": read new data from file in infinite cycle and train neuron net using last values for test */
(const any registry, const char logname[], const char filename[], const char neuronNet[], const float training_params[],
		int nCurrency, int graphX, int graphY, int neuronFlags) -> ()
	infiniteTraining = kk9dxgA9FsK_megNHL4eeQp_gKdUNuhHEPS_Yk3YR6zcRr8 /* gambler_violent_seen */;
/* @*/

/*@ "tradeEmulation.dpvm": emulate read exchange trade with real rates; amountCoeff: part of amount of each currency
	to use in each order; rateCoeff: part of current rate use to stop in trailing stop order
*/
(const any registry, const char logname[], const char filename[], const char neuronNet[], const float training_params[],
		int nCurrency, int graphX, int graphY, int neuronFlags, float amountCoeff, float rateCoeff) -> ()
	tradeEmulation = sGfEYkME97e_URwDVd2w3Um_W4faWLXFze8_pBUPUdRRYSc /* locomote_videoed_fret */;
/* @*/

/*@ "tradeEmulation2.dpvm": like tradeEmulation, but use dirrerent output and order algorithms */
(const any registry, const char logname[], const char filename[], const char neuronNet[], const float training_params[],
		int nCurrency, int graphX, int graphY, int neuronFlags, int flags, int dataSetPart,
		float amountCoeff, float lossRateCoeff, float profitRateCoeff) -> ()
	tradeEmulation2	= jtn8df23xbQ_Hm5XqUJZBvz_hyXXsrjVUqS_Um6vv6VA7Jx /* waveguide_worshipped_denomination */;
/* @*/

/*@ "tradeEmulation3.dpvm": like tradeEmulation2, but infinityLimitLoss algorithm only, use neuronTraining mode 1 */
(const any registry, const char logname[], const char filename[], const char neuronNet[], const float training_params[],
		int nCurrency, int graphX, int graphY, int neuronFlags, int flags, float amountCoeff, float rateCoeff,
		float testPart) -> ()
	tradeEmulation3	= NmuSqohjK2A_WtTNR6to2qe_VTZat3zQRoz_C6rmrEJVn2P /* puberty_faction_herbivores */;
/* @*/

/*@ "exchangeTrade.dpvm": fork of tradeEmulation2 working with real exchange */
(const any registry, const char exchangeName[], const char publicKey[], const char logname[], const char filename[],
		const char neuronNet[], const float training_params[], const char currencies[][],
		int nCurrency, int graphX, int graphY, int neuronFlags, int flags, int dataSetPart, float amountCoeff,
		float lossRateCoeff, float profitRateCoeff) -> ()
	exchangeTrade = MyWarWBYWj5_UoNbdDcntah_hMk88CnhVqQ_NgCL5vNM2of /* quietens_laying_sparred */;
/* @*/

/*@ "exchangeTrade2/trade.dpvm": fork of exchangeTrade with enhancements */
(const any registry, const char configFileName[], int inputPrivateKey) -> ()
	exchangeTrade2 = jVRxsuHMxdY_EtGA6P9bkig_DfErommgxQi_jYX6kBqeWgA /* antagonises_gutturally_appraised */;
/* @*/           